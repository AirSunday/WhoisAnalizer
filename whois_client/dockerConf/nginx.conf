worker_processes auto;
events {
    worker_connections 8000;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    log_format compression '$remote_addr - $remote_user [$time_local] '
         '"$request" $status $upstream_addr '
         '"$http_referer" "$http_user_agent"';
    server {
        listen 8080;
        access_log /var/log/nginx/access.log compression;
        root /var/www;
        index index.html index.htm;
        location / {
            if (!-e $request_filename) {
                rewrite ^(.*)$ /index.html break;
            }
        }
        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
            expires 1M;
            access_log off;
            add_header 'Cache-Control' 'public';
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
        }
        location ~* \.(?:css|js)$ {
            try_files $uri =404;
            expires 1y;
            access_log off;
            add_header Cache-Control "public";
        }
        location ~ ^.+\..+$ {
            try_files $uri =404;
        }
    }

     #HTTPS server
    server {
        listen       443 ssl;
        server_name  whoisa.ru;

        # Your CERT
        ssl_certificate      whoisa.crt;
        ssl_certificate_key  whoisa.rsa;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        access_log /var/log/nginx/access.log compression;
        root /var/www;
        index index.html index.htm;
        location / {
            if (!-e $request_filename) {
                rewrite ^(.*)$ /index.html break;
            }
        }

        location ~ ^/api/(.*)$ {
            proxy_set_header    X-Real-IP        $remote_addr;
            proxy_set_header    X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Host $http_host;
            proxy_set_header    X-Forwarded-Port $http_port;
            proxy_set_header    X-Accel-Internal /internal_xxx;
            proxy_set_header    Host $http_host;
            proxy_set_header    HTTPS $https;
            proxy_set_header    X-SCHEME $scheme;

            proxy_set_header    X-Forwarded-Protocol $scheme;
            proxy_set_header    X-Forwarded-Proto    $scheme; # for Mojo

            proxy_set_header    SSL_PROTOCOL $ssl_protocol;
            proxy_set_header    SSL_CIPHER $ssl_cipher;
            proxy_set_header    SSL_SESSION_ID $ssl_session_id;

            proxy_set_header    SSL_CLIENT_CERT $ssl_client_cert;
            proxy_set_header    SSL_CLIENT_M_SERIAL $ssl_client_serial;
            proxy_set_header    SSL_CLIENT_S_DN $ssl_client_s_dn;
            proxy_set_header    SSL_CLIENT_I_DN $ssl_client_i_dn;
            proxy_set_header    SSL_CLIENT_VERIFY $ssl_client_verify;

            proxy_pass http://188.68.222.76:8080/api/$1;
        }

    }
}